@model turma11_grupo04.Models.Cliente

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Cliente</h4>

<link rel="stylesheet" href="/css/PopupCadastroCliente.css">



<div class="container mt-5">
    <button type="button" id="openPopup">
        Cadastrar cliente
    </button>

    <div id="popup" class="popup">
        <div class="popup-content">
            <button type="button" id="closePopup" class="close-button">×</button>
            <h5 class="modal-title">Cadastrar cliente</h5><br>
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <input asp-for="Nome" class="form-control" id="nomeInput" placeholder="Nome completo" />
                    <br><span asp-validation-for="Nome" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input asp-for="Email" class="form-control" id="emailInput" placeholder="Email" />
                    <br><span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input asp-for="CPF" class="form-control" id="cpfInput" placeholder="CPF" />
                    <br><span asp-validation-for="CPF" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input asp-for="Telefone" class="form-control" id="telefoneInput" placeholder="Telefone" />
                    <br><span asp-validation-for="Telefone" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Cadastrar" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
</div>

<style>
    .popup {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.7);
        z-index: 999;
        align-items: center;
        justify-content: center;
    }

    .popup-content {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: #fff;
        padding: 30px; 
        width: 600px; 
        max-width: 80%; 
        height: 500px;
        border-radius: 15px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
        text-align: center;
    }

    .modal-title{
        margin-top: 1em;
    }

    .close-button {
        position: absolute;
        top: 10px;
        right: 10px;
        background: none;
        border: none;
        font-size: 20px;
        cursor: pointer;

        font-size: 50px;
        color: #3BADCD;
        margin-right: 10px;
        text-align: end;
    }

    .form-group {
        margin-bottom: 15px; /* Adicione margem inferior para dar espaçamento entre os grupos de inputs */
    }

</style>


<script>
    document.getElementById("openPopup").addEventListener("click", function () {
        document.getElementById("popup").style.display = "block";
    });

    document.getElementById("closePopup").addEventListener("click", function () {
        document.getElementById("popup").style.display = "none";
    });
</script>



<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}


<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/html5shiv@3.7.3/dist/html5shiv.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/respond.js@1.4.2/dest/respond.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>



<style>


</style>

<script>
    const cpfInput = document.getElementById('cpfInput');

    cpfInput.addEventListener('input', (e) => {
        // Remove todos os caracteres não numéricos
        const inputText = e.target.value.replace(/\D/g, '');

        // Formate o CPF
        const formattedCPF = formatCPF(inputText);

        // Atualize o campo de entrada com o CPF formatado
        e.target.value = formattedCPF;
    });

    function formatCPF(cpf) {
        if (cpf.length >= 4) {
            return cpf.replace(/(\d{3})(\d{3})(\d{3})(\d{2})/, '$1.$2.$3-$4');
        }
        return cpf;
    }


    $(document).ready(function () {
        $('#Telefone').on('input', function () {
            var input = $(this);
            var value = input.val().replace(/\D/g, ''); // Remove não dígitos
            var formattedValue = '';

            if (value.length > 2) {
                formattedValue = '(' + value.slice(0, 2) + ')';
            } else {
                formattedValue = '(' + value;
            }

            if (value.length > 2) {
                formattedValue += value.slice(2, 6);
            } else {
                formattedValue += value.slice(2);
            }

            if (value.length > 6) {
                formattedValue += '-' + value.slice(6, 10);
            } else {
                formattedValue += '-';
            }

            input.val(formattedValue);
        });
    });

</script>